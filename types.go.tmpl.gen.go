// AUTOMATICALLY GENERATED FILE. DO NOT EDIT.

package dispel

var typesTmpl = tmpl(asset.init(asset{Name: "types.go.tmpl", Content: "" +
	"// generated by {{ .Prgm }}; DO NOT EDIT\n\npackage {{ .PkgName }}\n{{ $imports := (typeImports .Routes) }}\n{{ if $imports }}import {{ if eq (len $imports) 1 }}\"{{ index $imports 0 }}\"{{ else }}({{ range $imports }}\n    \"{{ . }}\"{{end}}\n){{ end }}{{ end }}\n\n{{ $existingTypes := .ExistingTypes }}{{ $routes := .Routes }}{{ range .Routes.JSONNamedTypes }}{{/*\nDo not generate the type definition if it's already present in the package\n*/}}{{ if not (hasItem $existingTypes .TypeName) }}{{ $def := printTypeDef . }}{{ $typeName := .TypeName }}{{ if $def }}// {{ $typeName }} represents the data structure sent/received on the following routes:\n//{{ $routesForType := (routesForType $routes .) }}{{ range $routesForType }}{{/*\nWrite routes on which this type is involved.\n*/}}\n{{ if .InputTypeName }}//  * Request body of {{ .Route.Method }} {{ .Route.Path }}{{ if not (eq .InputTypeName $typeName)}} (as {{ .InputTypeName }}){{end}}{{end}}{{ if .OutputTypeName }}//  * Response body of {{ .Route.Method }} {{ .Route.Path }}{{ if not (eq .OutputTypeName $typeName)}} (as {{ .OutputTypeName }}){{end}}{{end}}{{end}}\n{{ $def }}{{ end }}{{ end }}\n\n{{ end }}\n" +
	""}))
