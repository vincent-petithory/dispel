// AUTOMATICALLY GENERATED FILE. DO NOT EDIT.

package dispel

var handlersTmpl = tmpl(asset.init(asset{Name: "handlers.go.tmpl", Content: "" +
	"// generated by {{ .Prgm }}; DO NOT EDIT\n\npackage {{ .PkgName }}\n\nimport (\n\t\"net/http\"\n)\n\ntype handlerRegisterer interface {\n    RegisterHandler(routeName string, handler http.Handler)\n}\n\ntype routeParamGetter interface {\n    GetRouteParam(w http.ResponseWriter, r *http.Request, name string) (string, error)\n}\n\ntype httpEncoder interface {\n    Encode(http.ResponseWriter, *http.Request, interface{}) error\n}\n\ntype httpDecoder interface {\n    Decode(http.ResponseWriter, *http.Request, interface{}) error\n}\n\ntype errorHTTPHandlerFunc func (http.ResponseWriter, *http.Request) (int, error)\n\n// registerHandlers registers resource handlers for each unique named route.{{ $handlerReceiverType := .HandlerReceiverType }}\nfunc registerHandlers(hr handlerRegisterer, rpg routeParamGetter, {{ varname $handlerReceiverType}} {{ $handlerReceiverType }}, hd httpDecoder, he httpEncoder, ehhf func(errorHTTPHandlerFunc) http.handler) {\n{{ range .Routes.ByResource }}    hr(route{{ symbolName .Name }}, &MethodHandler{\n{{ $route := . }}{{ range .Methods }}\t{{ . | tolower | capitalize }}: ehhf(func(w http.ResponseWriter, r *http.Request) (int, error) {\n        {{ range $route.RouteParams }}{{ .Varname }}, err := rpg(w, r, \"{{ .Name }}\")\n\tif err != nil {\n\t\treturn http.StatusBadRequest, err\n\t}{{end}}\n\n\t{{ $io := index $route.MethodRouteIOMap . }}\n\t{{ if $io.InType }}var vreq interface{}\n\tif err := hd.Decode(w, r, &vreq); err != nil {\n            return http.StatusBadRequest, err\n\t}{{ end }}\n\n\tstatus{{ if $io.OutType }}, vresp{{end}}, err := {{ varname $handlerReceiverType}}.{{ . | tolower }}{{ $route.Name | symbolName }}(w, r{{/*\nRoute params and I/O types\n*/}}{{ range $route.RouteParams }}, {{ .Varname }}{{end}}{{ if $io.InType }}, vreq{{end}})\n        if err != nil {\n            return status, err\n        }\n        return status, he.Encode(w, r, vresp)\n}),\n{{end}}\n})\n{{end}}}\n" +
	""}))
