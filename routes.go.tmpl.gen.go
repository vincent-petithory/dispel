// AUTOMATICALLY GENERATED FILE. DO NOT EDIT.

package dispel

var routesTmpl = tmpl(asset.init(asset{Name: "routes.go.tmpl", Content: "" +
	"// generated by {{ .Prgm }}; DO NOT EDIT\n\npackage {{ .PkgName }}\n\nimport (\n    \"net/url\"\n)\n\ntype routeRegisterer interface {\n    RegisterRoute(path string, name string)\n}\n\ntype routeReverser interface {\n    ReverseRoute(name string, params ...string) *url.URL \n}\n\ntype routeReverse struct {\n    R routeReverser\n}\n\n// registerRoutes uses rr to register the routes by path and name.\nfunc registerRoutes(rr routeRegisterer) {\n{{ range .Routes.ByResource }}    rr.RegisterRoute(\"{{ .Path }}\", route{{ symbolName .Name }})\n{{end}}}\n\n{{ range .Routes.ByResource }}func (rr *routeReverse) {{ .Name | symbolName }}({{ range .RouteParams }}{{ .Varname }} string,{{end}}) *url.URL {\n    return rr.R.ReverseRoute(route{{ symbolName .Name }}, {{ range .RouteParams }}\"{{ .Name }}\", {{ .Varname }},{{end}})\n}\n{{end}}\n\nconst (\n{{ range .Routes.ByResource }}    route{{ symbolName .Name }} = \"{{ .Name }}\"\n{{end}}\n)\n" +
	""}))
